eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    instance-id: dept9001
    prefer-ip-address: true 

#自定义路由映射  
zuul:
  prefix: /api   # 访问网关路径的前缀（在映射路径的前面，一般用于区别开发的版本）
  routes:
    zuul-service01:       # 随意写的区分不同映射服务器的名称（只是区分不同的映射服务器）
      path: /provider/**    # 自定义映射服务器路径的名称（相当于key，外部访问这个地址会映射到下面的service-id这个value值。然后从eureka服务列表找到对应服务名称，进而负载均衡的请求一个服务器）
#      url: http://127.0.0.1:8093  # 这是写的固定映射url，可代替service-id。但是不能实现服务器的负载均衡和高可用，因为总是访问同一服务器
      service-id: microservicecloud-provider     # eureka注册中心中要映射的服务名称，因为是双层map结构，所以可以实现负载均衡和高可用
#  因为zuul是整合ribbon和hystrix的另一个客户端，所以我们需要自己导入spring-retry坐标，并且开启服务
  #retryable: true
#  配置zuul的连接时间，一般不需要配置
#  host:
#    max-per-route-connections:
#    socket-timeout-millis:
#    connect-timeout-millis:
#  ignored-services: microservice-comsumer-movie-ribbon-withhystrix    # 这是表示某一个服务不允许代理，
  sensitive-headers:  #设置忽略的头信息，设置为空能解决会话保持问题
  add-host-header: true #设为true才能保持Host头信息处理正确
